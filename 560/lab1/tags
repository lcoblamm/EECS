!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
LINKEDLIST_H	Coblammers_Lab1/LinkedList.h	8;"	d
LINKEDLIST_H	LinkedList.h	8;"	d
LinkedList	Coblammers_Lab1/LinkedList.cpp	/^LinkedList::LinkedList()$/;"	f	class:LinkedList
LinkedList	Coblammers_Lab1/LinkedList.h	/^class LinkedList$/;"	c
LinkedList	LinkedList.cpp	/^LinkedList::LinkedList()$/;"	f	class:LinkedList
LinkedList	LinkedList.h	/^class LinkedList$/;"	c
NODE_H	Coblammers_Lab1/Node.h	8;"	d
NODE_H	Node.h	8;"	d
Node	Coblammers_Lab1/Node.cpp	/^Node::Node()$/;"	f	class:Node
Node	Coblammers_Lab1/Node.cpp	/^Node::Node(int data)$/;"	f	class:Node
Node	Coblammers_Lab1/Node.h	/^class Node $/;"	c
Node	Node.cpp	/^Node::Node()$/;"	f	class:Node
Node	Node.cpp	/^Node::Node(int data)$/;"	f	class:Node
Node	Node.h	/^class Node $/;"	c
erase	Coblammers_Lab1/LinkedList.cpp	/^bool LinkedList::erase(int data)$/;"	f	class:LinkedList
erase	Coblammers_Lab1/LinkedList.cpp	/^bool LinkedList::erase(int data, Node* pNode)$/;"	f	class:LinkedList
erase	LinkedList.cpp	/^bool LinkedList::erase(int data)$/;"	f	class:LinkedList
erase	LinkedList.cpp	/^bool LinkedList::erase(int data, Node* pNode)$/;"	f	class:LinkedList
eraseAll	Coblammers_Lab1/LinkedList.cpp	/^void LinkedList::eraseAll(Node* pNode)$/;"	f	class:LinkedList
eraseAll	LinkedList.cpp	/^void LinkedList::eraseAll(Node* pNode)$/;"	f	class:LinkedList
find	Coblammers_Lab1/LinkedList.cpp	/^Node* LinkedList::find(int data) $/;"	f	class:LinkedList
find	Coblammers_Lab1/LinkedList.cpp	/^Node* LinkedList::find(int data, Node* pNode) $/;"	f	class:LinkedList
find	LinkedList.cpp	/^Node* LinkedList::find(int data) $/;"	f	class:LinkedList
find	LinkedList.cpp	/^Node* LinkedList::find(int data, Node* pNode) $/;"	f	class:LinkedList
getData	Coblammers_Lab1/Node.cpp	/^int Node::getData()$/;"	f	class:Node
getData	Node.cpp	/^int Node::getData()$/;"	f	class:Node
getNext	Coblammers_Lab1/Node.cpp	/^Node* Node::getNext()$/;"	f	class:Node
getNext	Node.cpp	/^Node* Node::getNext()$/;"	f	class:Node
insert	Coblammers_Lab1/LinkedList.cpp	/^void LinkedList::insert(int data)$/;"	f	class:LinkedList
insert	Coblammers_Lab1/LinkedList.cpp	/^void LinkedList::insert(int data, Node* pNode)$/;"	f	class:LinkedList
insert	LinkedList.cpp	/^void LinkedList::insert(int data)$/;"	f	class:LinkedList
insert	LinkedList.cpp	/^void LinkedList::insert(int data, Node* pNode)$/;"	f	class:LinkedList
isEmpty	Coblammers_Lab1/LinkedList.cpp	/^bool LinkedList::isEmpty()$/;"	f	class:LinkedList
isEmpty	LinkedList.cpp	/^bool LinkedList::isEmpty()$/;"	f	class:LinkedList
m_data	Coblammers_Lab1/Node.h	/^  int m_data;$/;"	m	class:Node
m_data	Node.h	/^  int m_data;$/;"	m	class:Node
m_first	Coblammers_Lab1/LinkedList.h	/^  Node* m_first;$/;"	m	class:LinkedList
m_first	LinkedList.h	/^  Node* m_first;$/;"	m	class:LinkedList
m_next	Coblammers_Lab1/Node.h	/^  Node* m_next;$/;"	m	class:Node
m_next	Node.h	/^  Node* m_next;$/;"	m	class:Node
main	Coblammers_Lab1/main.cpp	/^int main(int argc, char* argv[])$/;"	f
main	main.cpp	/^int main(int argc, char* argv[])$/;"	f
print	Coblammers_Lab1/LinkedList.cpp	/^void LinkedList::print()$/;"	f	class:LinkedList
print	LinkedList.cpp	/^void LinkedList::print()$/;"	f	class:LinkedList
setData	Coblammers_Lab1/Node.cpp	/^void Node::setData(int data)$/;"	f	class:Node
setData	Node.cpp	/^void Node::setData(int data)$/;"	f	class:Node
setNext	Coblammers_Lab1/Node.cpp	/^void Node::setNext(Node* next) $/;"	f	class:Node
setNext	Node.cpp	/^void Node::setNext(Node* next) $/;"	f	class:Node
~LinkedList	Coblammers_Lab1/LinkedList.cpp	/^LinkedList::~LinkedList()$/;"	f	class:LinkedList
~LinkedList	LinkedList.cpp	/^LinkedList::~LinkedList()$/;"	f	class:LinkedList
~Node	Coblammers_Lab1/Node.cpp	/^Node::~Node()$/;"	f	class:Node
~Node	Node.cpp	/^Node::~Node()$/;"	f	class:Node
